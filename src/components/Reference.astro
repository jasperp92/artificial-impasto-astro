---
const {
  title,
  authors,
  year,
  link,
  type = "paper",   // paper, software, github, website, download, internal ...
  label = "",
  embed = false,
  class: customClass = "", // <--- hier
} = Astro.props;

function getDefaultLabel(type) {
  switch (type) {
    case "software":
      return "Software-Projekt";
    case "github":
      return "GitHub-Repository";
    case "website":
      return "Blog-Eintrag";
    case "download":
      return "Download";
    case "internal":
      return "Interner Link";
    case "paper":
      return "Paper";
    default:
      return "Link";
  }
}

const hasCustomLabel = !!label;
const displayLabel = hasCustomLabel
  ? label
  : getDefaultLabel(type);

// Icon-Mapping ohne Präfix
const iconMap = {
  download: "download",
  internal: "forward",
  software: "code",
  github: "github",
  website: "external-link",
  paper: "article",
};

// Klasse zusammensetzen (mit Präfix)
const iconClass = `pixelart-icons-font-${iconMap[type] || "external-link"}`;
---

{embed ? (
  <div class="my-6">
    <h3 class="mb-2">{title}</h3>
    <p class=" text-zinc-400 keep-visible mb-2">
      {authors} ({year})
    </p>
    <iframe src={link} width="100%" height="600" class="border rounded" />
  </div>
) : (
  <a
  href={link}
  target={type === "internal" ? "_self" : "_blank"}
  rel={type === "internal" ? undefined : "noopener noreferrer"}
  class={`block layout-box mb-6 h-fit reference ${customClass}`}
>
  <div class="inline-flex items-center">
    <i class={`mr-2 text-2xl ${iconClass}`} aria-hidden="true"></i>
    <p class="italic text-base">{displayLabel}</p>
  </div>
  <div class="text-xl font-bold mb-2">{title}</div>
  <slot />
  {type !== "internal" && (
    <p class="text-base text-gray-400">
      {authors} ({year})
    </p>
  )}
</a>
)}
