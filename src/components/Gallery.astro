---
interface Props {
  path: string; // z. B. "urlaub" oder "museum"
}

const { path } = Astro.props;

// Alle Bilder laden
const allImages = import.meta.glob("../assets/images/gallery/**/*.{jpg,jpeg,png}", { eager: true });

// Nur die Bilder aus dem angegebenen Ordner
const imageList = Object.entries(allImages)
  .filter(([file]) => file.includes(`/gallery/${path}/`))
  .map(([_, mod]: any) => mod.default);
---

<div class="w-full mb-8">
  <!-- Aktives Bild -->
  <div class="w-full mb-1">
    <img
      id="active-image"
      src={imageList[0].src}
      width={imageList[0].width}
      height={imageList[0].height}
      alt=""
      class="block w-full h-auto transition"
    />
  </div>

  <!-- Thumbnails -->
  <div class="flex flex-wrap gap-1">
    {imageList.map((img, index) => (
      <button
        type="button"
        class="flex-shrink-0 cursor-pointer opacity-50 border-transparent"
        data-index={index}
      >
        <img
          src={img.src}
          width="100"
          height="80"
          alt=""
          class="block w-30 h-auto object-cover"
        />
      </button>
    ))}
  </div>
</div>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const activeImage = document.getElementById("active-image");
    const thumbnails = document.querySelectorAll("[data-index]");

    thumbnails.forEach((thumb) => {
      thumb.addEventListener("click", () => {
        const index = parseInt(thumb.dataset.index);
        const img = thumb.querySelector("img");
        if (img && activeImage) {
          activeImage.src = img.src;
        }

        // Aktives Thumbnail hervorheben
        thumbnails.forEach((t) => t.classList.remove("opacity-100"));
        thumb.classList.add("opacity-100");
      });
    });

    // Erstes Thumbnail markieren
    if (thumbnails.length > 0) {
      thumbnails[0].classList.add("opacity-100");
    }
  });
</script>
