---
interface Props {
  path: string; // z. B. "urlaub" oder "museum"
}

const { path } = Astro.props;

const allImages = import.meta.glob("../assets/images/gallery/**/*.{jpg,jpeg,png}", { eager: true });

const imageList = Object.entries(allImages)
  .filter(([file]) => file.includes(`/gallery/${path}/`))
  .map(([_, mod]: any) => mod.default);

const galleryId = `gallery-${path}`;

// Maße des ersten Bildes als Referenz
const refWidth = imageList[0].width;
const refHeight = imageList[0].height;

// Verhältnis fürs CSS: Breite = 100%, Höhe im gleichen Seitenverhältnis
const aspectRatio = refWidth / refHeight;
---

<div id={galleryId} class="w-full mb-8">
  <!-- Container mit fixem Seitenverhältnis basierend auf dem ersten Bild -->
  <div
    class="relative w-full mb-1 bg-black"
    style={`aspect-ratio: ${refWidth} / ${refHeight};`}
  >
    <img
      data-role="active"
      src={imageList[0].src}
      alt=""
      class="absolute inset-0 m-auto max-h-full max-w-full object-contain transition"
    />
  </div>

  <!-- Thumbnails -->
  <div class="flex flex-wrap gap-1">
    {imageList.map((img, index) => (
      <button
        type="button"
        class="flex-shrink-0 cursor-pointer opacity-50 border-transparent"
        data-index={index}
      >
        <img
          src={img.src}
          alt=""
          class="block w-32 h-24 object-cover"
        />
      </button>
    ))}
  </div>
</div>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("[id^='gallery-']").forEach((gallery) => {
      const activeImage = gallery.querySelector("[data-role='active']");
      const thumbnails = gallery.querySelectorAll("[data-index]");

      thumbnails.forEach((thumb) => {
        thumb.addEventListener("click", () => {
          const img = thumb.querySelector("img");
          if (img && activeImage) {
            activeImage.src = img.src;
          }

          thumbnails.forEach((t) => t.classList.remove("opacity-100"));
          thumb.classList.add("opacity-100");
        });
      });

      if (thumbnails.length > 0) {
        thumbnails[0].classList.add("opacity-100");
      }
    });
  });
</script>
