---
const { background, effects = [] } = Astro.props;
---

{background && (
  <div
    id="bg-layer"
    class="fixed inset-0 -z-10 bg-center bg-no-repeat will-change-transform
           bg-cover md:bg-size-[220%] lg:bg-size-[160%] xl:bg-size-[130%]
           dark:mix-blend-normal mix-blend-difference"
    style={`background-image:url('${background}');`}
    data-effects={JSON.stringify(effects)}
  ></div>
)}

<script is:inline>
  (function () {
    const bg = document.getElementById("bg-layer");
    if (!bg) return;

    let EFFECTS = [];
    try {
      EFFECTS = JSON.parse(bg.dataset.effects || "[]");
    } catch (e) {
      console.error("[BG] parse", e);
    }

    // MediaQuery: ab 992px (lg)
    const mq = window.matchMedia("(max-width: 992px)");

    let ticking = false;
    function applyScroll() {
      if (ticking) return;
      ticking = true;

      requestAnimationFrame(() => {
        const y = window.scrollY;

        if (!mq.matches) {
          // Effekte nur, wenn Screen < 992px
          if (EFFECTS.includes("effect-move")) {
            const offset = Math.round(-200 + y * 0.15);
            bg.style.backgroundPosition = `${offset}px center`;
          }

          if (EFFECTS.includes("effect-pixelate")) {
            bg.style.imageRendering = "pixelated";
            const size = Math.min(20 + y / 5, 300);
            bg.style.backgroundSize = `${Math.round(size)}px`;
          }

          if (EFFECTS.includes("effect-scale")) {
            bg.style.imageRendering = "pixelated";
            document.documentElement.style.overflowX = "hidden";
            const zoom = Math.min(160 + y * 0.1, 2000);
            bg.style.backgroundSize = `${zoom}% auto`;
            bg.style.backgroundPosition = "center center";
          }
        } else {
          // Ab lg: einfach Cover
          bg.style.imageRendering = "";
          bg.style.backgroundSize = "cover";
          bg.style.backgroundPosition = "center center";
          document.documentElement.style.overflowX = "";
        }

        ticking = false;
      });
    }

    window.addEventListener("scroll", applyScroll, { passive: true });
    mq.addEventListener("change", applyScroll);
    applyScroll(); // initial
  })();
</script>
